import NavButtons from "../../../components/NavButtons/NavButtons.tsx";


export default function Intro() {
  

  return (
    <section className={'topic container'}>
      <h2>Что такое CSS и зачем он нужен</h2>

      <p><strong>CSS</strong> (Cascading Style Sheets — каскадные таблицы стилей) — это язык, который задаёт, как элементы на веб-странице будут выглядеть: их цвета, размеры, шрифты, расположение и многое другое. Если HTML — это скелет страницы, то CSS — это её одежда и макияж.</p>
      <p>Проще говоря, CSS отвечает за стиль и оформление сайта, чтобы страницы не выглядели как набор сухих текстов и ссылок, а стали красивыми и удобными для пользователя.</p>

      <h3>Пример из жизни</h3>
      <p>Представьте, что у вас есть фотография. HTML — это само изображение, а CSS — это фильтры и рамки, которые вы накладываете, чтобы сделать её ярче, изменить цвета или добавить красивые эффекты.</p>
      <p>Например, у вас есть заголовок статьи. Без CSS он будет простой чёрный текст на белом фоне. С помощью CSS вы можете сделать его <span style={{color: 'red'}}>красным</span>, увеличить <big>размер</big>, сделать <strong>жирным</strong> и много чего ещё.</p>

      <h3>Как работает CSS</h3>
      <p>CSS описывает правила, которые применяются к элементам HTML. Правила состоят из селекторов (указывают, к каким элементам применять стиль) и деклараций (набор свойств и значений).</p>
      <p>Пример правила:</p>
      <pre><code>{`h1 {
  color: blue;
  font-size: 24px;
}`}
</code></pre>
      <p>Здесь <code>h1</code> — селектор, значит «применить стиль ко всем заголовкам первого уровня». <code>color: blue;</code> задаёт цвет текста синим, <code>font-size: 24px;</code> — размер шрифта 24 пикселя.</p>

      <h3>Почему CSS называют каскадным</h3>
      <p>Каскадность — это способ применения стилей, когда несколько правил могут конфликтовать, и браузер решает, какое из них использовать, исходя из приоритета. Например, если цвет текста задан и в одном, и в другом месте, применится правило с более высоким приоритетом.</p>

      <p>Главным фактором в этом выборе является <strong>вес селектора</strong> — числовое значение, которое показывает, насколько конкретное и приоритетное правило CSS.</p>

      <h4>Как считается вес селектора</h4>
      <ul>
        <li><strong>Inline-стиль</strong> (когда стиль прописан прямо в атрибуте <code>style=""</code>) — вес <strong>1000</strong>.</li>
        <li><strong>ID-селектор</strong> (<code>#id</code>) — вес <strong>100</strong>.</li>
        <li><strong>Класс, атрибут, псевдокласс</strong> (<code>.class</code>, <code>[type="text"]</code>, <code>:hover</code>) — вес <strong>10</strong>.</li>
        <li><strong>Тег или псевдоэлемент</strong> (<code>div</code>, <code>p</code>, <code>::before</code>) — вес <strong>1</strong>.</li>
      </ul>

      <h4>Примеры подсчёта веса</h4>
      <ul>
        <li><code>style="color: red;"</code> — inline-стиль, вес 1000.</li>
        <li><code>#header</code> — вес 100.</li>
        <li><code>.menu</code> — вес 10.</li>
        <li><code>div</code> — вес 1.</li>
        <li>Селектор <code>#header .menu div</code> — вес <code>100 + 10 + 1 = 111</code>.</li>
        <li>Селектор <code>.menu div</code> — вес <code>10 + 1 = 11</code>.</li>
      </ul>
      <p>Также есть ключевое слово <code>!important</code> — это способ вручную «поднять» приоритет правила на самый верх.</p>
      <h4>Важно знать:</h4>
      <ul>
        <li><code>!important</code> стоит использовать только в крайних случаях — например, если вы не можете изменить исходный CSS.</li>
        <li>Злоупотребление им усложняет поддержку кода: потом будет трудно понять, почему какие-то стили не работают.</li>
        <li>Он не отменяет всё подряд — если два правила с <code>!important</code>, и они конфликтуют, тогда снова вступает в силу правило веса.</li>
      </ul>
      <h3>Итого</h3>
      <ul>
        <li>CSS — язык, задающий внешний вид и оформление веб-страниц.</li>
        <li>Он работает по правилам, которые связывают стили с элементами HTML.</li>
        <li>Каскадность — способ выбирать, какие стили применить, если есть конфликт.</li>
        <li>CSS делает сайты красивыми, удобными и адаптивными под разные устройства.</li>
        <li>HTML — структура, CSS — стиль, вместе они создают полноценную страницу.</li>
      </ul>
      <NavButtons prev={'/css'} next={'/css/Connection'} />
    </section>
  )
}