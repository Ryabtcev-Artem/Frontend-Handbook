import clientserver from '../../../images/InternetImages/ClientAndServer/clientserver.png'
import NavButtons from "../../../components/NavButtons/NavButtons.tsx";
type ClientAndServerProps = {}

export default function ClientAndServer(props: ClientAndServerProps) {
  const {} = props

  return (
    <section className="topic container">
      <h2>Кто такой клиент, а кто сервер?</h2>

      <p>
        <strong>Клиент</strong> — это тот, кто делает запрос в интернете. В большинстве случаев — это вы, пользователь, который открывает сайт или запускает приложение.
      </p>
      <p>
        Запросы от вашего имени отправляет программа — браузер, мессенджер, плеер и т.д. Эта программа тоже называется клиентом.
      </p>

      <p>
        <strong>Сервер</strong> — это компьютер (или программа на нём), который принимает запросы и отдаёт нужные данные в ответ.
      </p>
      <p>
        Сервер хранит файлы, страницы, видео — и отсылает их клиенту, когда тот просит.
      </p>

      <h3>Как это работает</h3>
      <p>
        Вы вводите адрес сайта — это запрос. Сервер принимает его, находит нужную страницу и отправляет обратно. Браузер получает её и показывает вам. Всё это занимает доли секунды.
      </p>
      <figure>
        <img
          className={'invert'}
          src={clientserver}
          alt=""
          width=""
          height=""
          loading="lazy"
        />
        <figcaption><em>Упрощенный пример взаимодействия клиент-сервер</em></figcaption>
      </figure>

      <h3>На чём всё держится</h3>
      <p>
        Клиент и сервер понимают друг друга, потому что используют специальные протоколы — например, <code>HTTP</code> (Следующий урок). Это как общий язык, по которому они обмениваются данными.
      </p>

      <h3>Важно не запутаться</h3>
      <p>
        Клиент — это не просто программа, а вы вместе с ней. Вы решаете, что хотите получить, программа делает запрос, а сервер отвечает.
      </p>
      <p>
        Сервер — это не обязательно огромный дата-центр. Это может быть обычный компьютер, лишь бы он знал, как отвечать на запросы.
      </p>

      <h3>Простой пример</h3>
      <ul>
        <li>Вы открываете <code>example.com</code> — это запрос.</li>
        <li>Браузер отправляет запрос серверу.</li>
        <li>Сервер находит нужную страницу и отсылает её назад.</li>
        <li>Вы видите сайт у себя на экране.</li>
      </ul>

      <p>
        Можно представить: вы — как гость в кафе, делаете заказ. Сервер — как повар на кухне. Он готовит и приносит блюдо. Быстро, по делу и точно по заказу.
      </p>

      <h2>Итого</h2>
      <ul>
        <li>Клиент — это вы, пользователь, который делает запрос (через браузер, приложение и т.д.).</li>
        <li>Сервер — это компьютер, который отвечает на эти запросы и отправляет данные.</li>
        <li>Они работают вместе по понятным правилам (протоколам), например HTTP.</li>
        <li>Когда вы что-то открываете в интернете — вы клиент, а где-то там сервер всё для вас собирает и отдаёт.</li>
      </ul>
      <NavButtons prev={'/internet/HowHyperTextWork'} next={'/internet/Http'} />
    </section>
  )
}
