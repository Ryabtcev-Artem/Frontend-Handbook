import VsCode from "../../../components/VsCode/VsCode.tsx";
import NavButtons from "../../../components/NavButtons/NavButtons.tsx";
export default function GoodCommit() {

  return (
    <section className="topic container">
      <h2>Как сделать хороший коммит</h2>

      <p>Коммит — это как снимок вашего проекта в определённый момент времени. Хороший коммит помогает не только вам, но и всей команде быстро понять, что и зачем изменилось.</p>

      <h3>Почему важно делать хорошие коммиты?</h3>
      <p>Когда коммиты структурированы и понятны, можно легко:</p>
      <ul>
        <li>отследить историю изменений;</li>
        <li>понять, зачем было сделано то или иное изменение;</li>
        <li>быстро найти и исправить баг;</li>
        <li>эффективно работать в команде, не теряя времени на объяснения.</li>
      </ul>

      <h3>Главные принципы хорошего коммита:</h3>
      <ul>
        <li><strong>Маленькие и осознанные изменения.</strong> Коммит должен включать одно логическое изменение, чаще всего это правки в одном файле или небольшой группе файлов. Чем меньше и точнее, тем лучше.</li>
        <li><strong>Частота.</strong> Не копите изменения — коммитьте часто. Это упрощает контроль и откат при необходимости.</li>
        <li><strong>Чёткое и информативное сообщение.</strong> Сообщение должно кратко, но ёмко описывать, что изменилось и почему. Например, вместо «исправил баг» лучше написать «исправил ошибку с валидацией email в форме регистрации».</li>
        <li><strong>Не смешивайте разные задачи в одном коммите.</strong> Если вы добавляете новую фичу и одновременно исправляете баг, лучше сделать два отдельных коммита.</li>
        <li><strong>Проверяйте работу кода перед коммитом.</strong> Ваш коммит не должен ломать сборку или функционал — он должен быть рабочим и проверенным.</li>
      </ul>

      <h3>Пример плохого и хорошего коммита</h3>
      <p><em>Плохой коммит:</em></p>
      <VsCode>{`git commit -m "fix stuff"`}</VsCode>
      <p>Что конкретно исправлено? Неясно. Такая запись ничего не говорит ни вам, ни другим.</p>

      <p><em>Хороший коммит:</em></p>
      <VsCode>{`git commit -m "Fixed email validation error in registration form"`}</VsCode>
      <p>Чётко понятно, что сделано, где и зачем.</p>

      <h3>Почему маленькие коммиты — это круто?</h3>
      <p>Когда вы делаете небольшие коммиты:</p>
      <ul>
        <li>легче проследить, какое конкретно изменение вызвало проблему;</li>
        <li>проще возвращаться к нужной версии;</li>
        <li>команда быстрее понимает, что произошло;</li>
        <li>упрощается работа с ветками и слияниями.</li>
      </ul>

      <p>В итоге хорошая практика коммитов — залог удобной и надёжной истории проекта, которая поможет вам и вашим коллегам работать эффективнее.</p>
      <NavButtons prev={'/git/Save'} next={'/git/Branches'} />
    </section>
  )
}
