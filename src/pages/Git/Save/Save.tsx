import VsCode from "../../../components/VsCode/VsCode.tsx";
export default function Save() {

  return (
    <section className="container topic">
      <h2>Как сохраняются изменения в Git</h2>

      <h3>Git не следит за всем сам — вы говорите ему, что важно</h3>
      <p>
        Когда вы что-то меняете в проекте — редактируете файл, добавляете новый или удаляете — Git не начинает паниковать и не пытается сразу всё записать. Он ждёт. Ждёт, когда вы скажете: "Вот эти изменения — важны, сохрани их". Для этого служит команда:
      </p>

      <VsCode>{`git add имя_файла`}</VsCode>

      <p>
        Это как положить документ в папку "готово к подписи". Пока файл не добавлен — Git про него *помнит*, но не фиксирует.
      </p>

      <h3>Хочу сразу всё</h3>
      <p>
        Не хотите добавлять файлы по одному? Есть короткий способ:
      </p>

      <VsCode>{`git add .`}</VsCode>

      <p>
        Точка — значит "всё в этой папке и ниже". Удобно, когда вы поработали сразу над несколькими файлами.
      </p>

      <h3>add — это ещё не сохранение</h3>
      <p>
        После <code>git add</code> Git знает, какие файлы вы хотите сохранить. Но он ещё ничего не записал в историю. Чтобы зафиксировать изменения, используется:
      </p>

      <VsCode>{`git commit -m "Сообщение, что сделано"`}</VsCode>

      <p>
        Вот это уже и есть «сохранение» в понимании Git. Он делает снимок проекта, сохраняет всё, что вы добавили, и пишет к этому коммент. Это сообщение потом пригодится вам, команде и будущему «вам из будущего», который будет разбираться, что когда и зачем менялось.
      </p>

      <h3>Работает как контрольная точка</h3>
      <p>
        Каждый коммит — это точка, к которой можно вернуться. Представьте, что вы играете в игру, сделали сейв перед сложным боссом — вот это и есть коммит. Сломали проект? Возвращаемся. Коммит — наш бекап.
      </p>

      <h2>Итого</h2>
      <ul>
        <li><code>git add</code> — добавляет файл в список тех, что нужно зафиксировать.</li>
        <li><code>git add .</code> — добавляет все изменения в текущей папке.</li>
        <li><code>git commit</code> — создаёт контрольную точку проекта с описанием.</li>
        <li>Git не сохраняет сам — вы сами решаете, что и когда записывать в историю.</li>
        <li>Каждый коммит — это как сейв в игре: можно откатиться и начать заново.</li>
      </ul>
    </section>
  )
}
